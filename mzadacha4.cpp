// Автор:Высоцкая Инесса Д.
// mzadacha4.cpp
// часть модуля (файл, содержащий тела функций)
#include <cmath> // математическая библиотека С++(функции sqrt - квадратный корень, abs - модуль)
#include <cassert> // библиотека С++(для функции assert)

namespace arithmetic // создаём самостоятельно пространство имён для модуля(пространство имён (namespace) позволяет группировать идентификаторы в отдельные области, что помогает избежать конфликтов имён)
{
/// Возвращает результат вычислений среднего арифметического ( Среднее арифметическое = (f_num + sec_num)/2 );
/// f_num - первое положительное число, sec_num - второе положительное число
float average_arif(float f_num, float sec_num)
{
return (f_num + sec_num)/2; // возвращает результат вычислений по формуле
}

/// Возвращает результат вычислений среднего геометрического ( Среднее геометрическое = sqrt(f_num*sec_num) );
/// f_num - первое положительное число, sec_num - второе положительное число
float average_geom(float f_num, float sec_num)
{
return sqrt(f_num*sec_num); // возвращает результат вычислений по формуле
}

/// Проверяет правильность выполнения функций вычисления среднего ариф. и среднего геом. average_arif и average_geom
/// (условие должно быть обязательно верно, если нет, то программа прервёт свою дальнейшую работу и выведет сообщение об ошибке)
void test(){
assert( abs( average_arif(4, 5) - 4.5 ) < 0.01); // проверяем на правильность значения 4 и 5 (|функция (первое число, второе число)-результат|<погрешность вычислений)
assert( abs( average_arif(2, 3) - 2.5 ) < 0.01 ); // проверяем на правильность значения 2 и 3 (|функция (первое число, второе число)-результат|<погрешность вычислений)
assert( abs( average_arif(8, 9) - 8.5 ) < 0.01 ); // проверяем на правильность значения 8 и 9 (|функция (первое число, второе число)-результат|<погрешность вычислений)
assert( abs( average_geom(4, 5) - 4.47214 ) < 0.01); // проверяем на правильность значения 4 и 5 (|функция (первое число, второе число)-результат|<погрешность вычислений)
assert( abs( average_geom(2, 3) - 2.44949 ) < 0.01); // проверяем на правильность значения 2 и 3 (|функция (первое число, второе число)-результат|<погрешность вычислений)
assert( abs( average_geom(8, 9) - 8.48528 ) < 0.01); // проверяем на правильность значения 8 и 9 (|функция (первое число, второе число)-результат|<погрешность вычислений)
}
}